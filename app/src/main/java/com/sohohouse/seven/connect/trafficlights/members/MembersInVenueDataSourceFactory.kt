package com.sohohouse.seven.connect.trafficlights.membersimport androidx.paging.DataSourceimport com.sohohouse.seven.base.mvvm.Errorableimport com.sohohouse.seven.base.mvvm.Loadableimport com.sohohouse.seven.connect.VenueMemberimport com.sohohouse.seven.connect.trafficlights.repo.TrafficLightsRepoimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.flow.MutableStateFlowimport javax.inject.Injectimport kotlin.coroutines.CoroutineContextclass MembersInVenueDataSourceFactory @Inject constructor(    private val trafficLightsRepo: TrafficLightsRepo,    private val coroutineContext: CoroutineContext,    private val coroutineScope: CoroutineScope,    private val loadable: Loadable.ViewModel,    private val errorable: Errorable.ViewModel,    private val estimatedTotalFlow: MutableStateFlow<Int?>) : DataSource.Factory<Int, VenueMember>(),    Loadable.ViewModel by loadable,    Errorable.ViewModel by errorable {    override fun create(): DataSource<Int, VenueMember> {        return MembersInVenueDataSource(            trafficLightsRepo = trafficLightsRepo,            loadable = this,            errorable = this,            coroutineScope = coroutineScope,            coroutineContext = coroutineContext,            estimatedTotalFlow = estimatedTotalFlow        )    }}