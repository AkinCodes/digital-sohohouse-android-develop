package com.sohohouse.seven.profileimport com.sohohouse.seven.common.extensions.containsimport com.sohohouse.seven.common.user.UserManagerimport com.sohohouse.seven.network.core.models.Profileinterface ProfileToMutualConnectionStatus {    fun map(profile: Profile): MutualConnectionStatus    class Impl(        private val userManager: UserManager    ) : ProfileToMutualConnectionStatus {        override fun map(profile: Profile): MutualConnectionStatus = when {            profile.id == userManager.profileID -> NotAvailable            profile.mutualConnections.isNotEmpty() -> Connected            profile.mutualConnectionRequest.contains { it.sender.get().id == userManager.profileID } -> RequestSent            profile.mutualConnectionRequest.contains { it.receiver.get().id == userManager.profileID } -> RequestReceived            profile.mutualConnectionRequest.isNotEmpty() -> NotAvailable            else -> NotConnected        }    }}